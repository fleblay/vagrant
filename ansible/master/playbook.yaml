- name: Setup master node
  hosts: master
  gather_facts: true
  become: true
  vars:
    user: "{{ lookup('env','USER') }}"
    kubeconfig_file: "{{ lookup('env', 'HOME') + '/.kube/config' }}"

  tasks:
    - name: Gather services facts
      ansible.builtin.service_facts:

    - name: Install k3s
      ansible.builtin.debug:
        #msg: "curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=\"--node-ip={{master_node_ip}}\" K3S_KUBECONFIG_MODE=644 sh -s -"
        msg: "curl -sfL https://get.k3s.io | sh -s - server --write-kubeconfig-mode 644 --bind-address={{master_node_ip}} --node-external-ip={{master_node_ip}} --flannel-iface=eth1 "
      become: false
      when: services['k3s.service'] is not defined

    - name: Install k3s
      ansible.builtin.shell:
        #cmd: "curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=\"--node-ip={{master_node_ip}}\" K3S_KUBECONFIG_MODE=644 sh -s -"
        cmd: "curl -sfL https://get.k3s.io | sh -s - server --write-kubeconfig-mode 644 --bind-address={{master_node_ip}} --node-external-ip={{master_node_ip}} --flannel-iface=eth1 "
      become: false
      when: services['k3s.service'] is not defined

    - name: Gather services facts
      ansible.builtin.service_facts:

    - name: Wait for token to be generated
      ansible.builtin.wait_for:
        path: /var/lib/rancher/k3s/server/node-token
      when: services['k3s.service'] is defined

    - name: Fetch token on host
      ansible.builtin.fetch:
        src: /var/lib/rancher/k3s/server/node-token
        dest: /tmp/node-token
        flat: true

    - name: Fetch kubeconfig on host
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ kubeconfig_file }}"
        flat: true

    # Might be removed -> useless
    - name: Change IP of kubeconfig from 127.0.0.1 to {{master_node_ip}}
      ansible.builtin.lineinfile:
        path: "{{ kubeconfig_file }}"
        regex: "^    server: https://127.0.0.1:6443"
        line: "    server: https://{{ master_node_ip }}:6443"
      delegate_to: localhost
      become: false

    - name: Check if traefik-config file exists
      ansible.builtin.stat:
        path: "/var/lib/rancher/k3s/server/manifests/traefik-config.yaml"
      register: traefik_config_file

    - name: Create traefik-config custom file
      ansible.builtin.copy:
        dest: "/var/lib/rancher/k3s/server/manifests/traefik-config.yaml"
        content: |
          apiVersion: helm.cattle.io/v1
          kind: HelmChartConfig
          metadata:
            name: traefik
            namespace: kube-system
          spec:
            valuesContent: |-
              # globalArguments:
              #   - "--serversTransport.insecureSkipVerify=true"
              additionalArguments:
                - "--api"
                - "--api.dashboard=true"
                - "--api.insecure=true"
              ports:
                traefik:
                  expose: true
              # serversTransport:
              #   maxIdleConnsPerHost: -1
              logs:
                general:
                  level: DEBUG
                access:
                  enabled: true
                  # filePath: /var/log/traefik/access.log
      when: 
        - traefik_config_file.stat.exists == False

    - name: restart k3s
      ansible.builtin.systemd_service:
        state: restarted
        name: k3s
